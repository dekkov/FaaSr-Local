{
  "ComputeServers": {
    "My_GitHub_Account": {
      "FaaSType": "GitHubActions",
      "UserName": "test",
      "UseSecretStore": false,
      "ActionRepoName": "FaaSr-workflow",
      "Branch": "main",
      "Token": "My_GitHub_Account_TOKEN"
    }
  },
  "DataStores": {
    "My_Minio_Bucket": {
      "Bucket": "test",
      "Endpoint": "https://play.min.io",
      "Region": "us-east-1",
      "Writable": "TRUE",
      "AccessKey": "My_Minio_Bucket_ACCESS_KEY",
      "SecretKey": "My_Minio_Bucket_SECRET_KEY"
    }
  },
  "ActionList": {
    "start_function": {
      "FunctionName": "return_output",
      "FaaSServer": "My_GitHub_Account",
      "Type": "R",
      "Arguments": {
        "condition": true
      },
      "InvokeNext": [
        {
          "True": ["A"],
          "False": ["B"]
        }
      ]
    },
    "A": {
      "FunctionName": "return_output",
      "FaaSServer": "My_GitHub_Account",
      "Type": "R",
      "Arguments": {
        "condition": true
      },
      "InvokeNext": [
        {
          "True": ["C"],
          "False": ["D"]
        }
      ]
    },
    "B": {
      "FunctionName": "return_output",
      "FaaSServer": "My_GitHub_Account",
      "Type": "R",
      "Arguments": {
        "condition": true
      },
      "InvokeNext": ["E"]
    },
    "C": {
      "FunctionName": "return_output",
      "FaaSServer": "My_GitHub_Account",
      "Type": "R",
      "Arguments": {
        "condition": true
      },
      "InvokeNext": ["final_function"]
    },
    "D": {
      "FunctionName": "return_output",
      "FaaSServer": "My_GitHub_Account",
      "Type": "R",
      "Arguments": {
        "condition": true
      },
      "InvokeNext": ["final_function"]
    },
    "E": {
      "FunctionName": "return_output",
      "FaaSServer": "My_GitHub_Account",
      "Type": "R",
      "Arguments": {
        "condition": true
      },
      "InvokeNext": ["final_function"]
    },
    "final_function": {
      "FunctionName": "return_output",
      "FaaSServer": "My_GitHub_Account",
      "Type": "R",
      "Arguments": {
        "condition": true
      },
      "InvokeNext": []
    }
  },
  "ActionContainers": {
    "start_function": "ghcr.io/faasr/github-actions-tidyverse",
    "A": "ghcr.io/faasr/github-actions-tidyverse",
    "B": "ghcr.io/faasr/github-actions-tidyverse",
    "C": "ghcr.io/faasr/github-actions-tidyverse",
    "D": "ghcr.io/faasr/github-actions-tidyverse",
    "E": "ghcr.io/faasr/github-actions-tidyverse",
    "final_function": "ghcr.io/faasr/github-actions-tidyverse"
  },
  "FunctionGitRepo": {
    "return_output": "test/test-repo"
  },
  "FunctionInvoke": "start_function",
  "InvocationID": "INVOCATION_ID",
  "InvocationIDFromDate": "%Y%m%d%H%M",
  "FaaSrLog": "FaaSrLog",
  "LoggingDataStore": "My_Minio_Bucket",
  "DefaultDataStore": "My_Minio_Bucket",
  "WorkflowName": "nested_conditional_test"
}

